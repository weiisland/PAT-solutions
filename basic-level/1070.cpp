/*
给定一段一段的绳子，你需要把它们串成一条绳。每次串连的时候，是把两段绳子对折，再如下图所示套接在一起。
这样得到的绳子又被当成是另一段绳子，可以再次对折去跟另一段绳子串连。每次串连后，原来两段绳子的长度就会减半。


给定N段绳子的长度，你需要找出它们能串成的绳子的最大长度。

输入格式：

每个输入包含1个测试用例。每个测试用例第1行给出正整数N (2 <= N <= 104)；第2行给出N个正整数，即原始绳段的长度，数字间以空格分隔。
所有整数都不超过104。

输出格式：

在一行中输出能够串成的绳子的最大长度。结果向下取整，即取为不超过最大长度的最近整数。

输入样例：
8
10 15 12 3 4 13 1 15
输出样例：
14
*/

#include <stdio.h>

void bubblesort(int *m, int n)
{
  int i, j;
  for(i = 0; i < n; i++)
  {
    for(j = 1; j < n - i; j++)
    {
      if(m[j-1] > m[j])
      {
        int temp;
        temp = m[j];
        m[j] = m[j-1];
        m[j-1] = temp;
      }
    }
  }
}

int main()
{
  int n;
  scanf("%d", &n);
  int i, j, result = 0;
  int m[n];
  for(i = 0; i < n; i++)
  {
    scanf("%d", &m[i]);
  }
  bubblesort(m, n);
  for(i = 1; i < n; i++)
  {
    m[i] = (m[i] + m[i-1])/2;
  }
  printf("%d", m[n-1]);
  return 0;
}
